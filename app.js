let gameSeq = []; // Sequence of buttons generated by the game
let userSeq = []; // Sequence of buttons clicked by the user
let btns = ["yellow", "red", "purple", "green"]; // Array of button colors
let started = false; // To track if the game has started

let level = 0; // To track the current level

let h2 = document.querySelector("h2"); // Select the heading element to display level and messages

// Start the game when a key is pressed
document.addEventListener("keypress", function() {
    if(!started) { // If the game hasn't started yet
        console.log("Game is Started");
        started = true; // Set game to started
        levelUp(); // Move to the first level
    }
});

// Function to add a flash effect to the game button
function btnFlash(btn) {
    btn.classList.add("flash");
    setTimeout(function() {
        btn.classList.remove("flash");
    }, 250); // Flash duration of 250ms
}

// Function to add a flash effect when the user presses a button
function userFlash(btn) {
    btn.classList.add("userFlash");
    setTimeout(function() {
        btn.classList.remove("userFlash");
    }, 250); // Flash duration of 250ms
}

// Function to move to the next level
function levelUp() {
    userSeq = []; // Reset the user sequence for the new level
    level++; // Increase the level
    h2.innerText = `Level ${level}`; // Display the current level

    // Choose a random button color
    let ranIdx = Math.floor(Math.random() * 4); // Generate a random index from 0 to 3
    let ranCol = btns[ranIdx]; // Pick a random color from the 'btns' array
    let ranBtn = document.querySelector(`.${ranCol}`); // Get the button element based on the random color
    gameSeq.push(ranCol); // Add the random color to the game sequence
    console.log(gameSeq);
    btnFlash(ranBtn); // Flash the random button
}

// Function to check if the user input matches the game sequence
function checkAns(idx) {
    if(userSeq[idx] === gameSeq[idx]) { // If the user's current button matches the game sequence
        if (userSeq.length === gameSeq.length) { // If the user completed the full sequence
            setTimeout(levelUp, 1000); // Move to the next level after 1 second
        }
    } else { // If the user clicked the wrong button
        h2.innerHTML = `Game Over! Your score was <b>${level}</b> <br>Press any key to start`; // Display game over message
        document.querySelector("body").style.backgroundColor = "red"; // Flash the background red
        setTimeout(function() {
            document.querySelector("body").style.backgroundColor = "white"; // Reset background color after 150ms
        }, 150);
        reset(); // Reset the game
    }
}

// Function to handle user button press
function btnPress() {
    let btn = this; // Get the clicked button element
    userFlash(btn); // Flash the button for the user

    let userColor = btn.getAttribute("id"); // Get the color of the clicked button
    userSeq.push(userColor); // Add the clicked button color to the user sequence

    checkAns(userSeq.length - 1); // Check if the user's sequence is correct
}

// Add event listeners to all buttons
let AllBtns = document.querySelectorAll(".btn");

for (let btn of AllBtns) { // Add a click event listener to each button
    btn.addEventListener("click", btnPress);
}

// Function to reset the game
function reset() {
    started = false; // Reset the game start status
    gameSeq = []; // Clear the game sequence
    userSeq = []; // Clear the user sequence
    level = 0; // Reset the level
}
